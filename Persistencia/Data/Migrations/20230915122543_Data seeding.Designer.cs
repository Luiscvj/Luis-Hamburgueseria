// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(HamburgueseriaContext))]
    [Migration("20230915122543_Data seeding")]
    partial class Dataseeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Hamburguesas sin carnes",
                            Nombre = "Vegetariana"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Hamburguesas con mas de dos tipos de queso",
                            Nombre = "Quesuda"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Hamburguesas gourmet  con carne angus",
                            Nombre = "Doble Carne"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(130)
                        .HasColumnType("varchar(130)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("chef", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Especialidad = "Carnes",
                            Nombre = "Gustov"
                        },
                        new
                        {
                            Id = 2,
                            Especialidad = "Parrilla",
                            Nombre = "Marco"
                        },
                        new
                        {
                            Id = 3,
                            Especialidad = "Salsas",
                            Nombre = "Antonio"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(130)
                        .HasColumnType("varchar(130)");

                    b.Property<int>("Precio")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ChefId");

                    b.ToTable("hamburguesa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 3,
                            ChefId = 1,
                            Nombre = "La Poporra",
                            Precio = 15
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            ChefId = 2,
                            Nombre = "La verde",
                            Precio = 12
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa_Ingrediente", b =>
                {
                    b.Property<int>("HamburguesaId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.HasKey("HamburguesaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("hamburguesa_ingrediente", (string)null);

                    b.HasData(
                        new
                        {
                            HamburguesaId = 1,
                            IngredienteId = 3
                        },
                        new
                        {
                            HamburguesaId = 2,
                            IngredienteId = 1
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(130)
                        .HasColumnType("varchar(130)");

                    b.Property<int>("Precio")
                        .HasPrecision(10, 3)
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ingrediente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Vegetal",
                            Nombre = "Lechuga",
                            Precio = 2,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Pan con mucha fibra",
                            Nombre = "Pan Integral",
                            Precio = 4,
                            Stock = 3000
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Carne Angus",
                            Nombre = "Carne",
                            Precio = 10,
                            Stock = 2000
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.HasOne("Dominio.Entities.Categoria", "Categoria")
                        .WithMany("Hamburguesas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Chef", "Chef")
                        .WithMany("Hamburguesas")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa_Ingrediente", b =>
                {
                    b.HasOne("Dominio.Entities.Hamburguesa", null)
                        .WithMany("Hamburguesa_Ingredientes")
                        .HasForeignKey("HamburguesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ingrediente", null)
                        .WithMany("Hamburguesa_Ingredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Navigation("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Navigation("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.Navigation("Hamburguesa_Ingredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Navigation("Hamburguesa_Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
